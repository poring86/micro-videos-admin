{
    "sourceFile": "src/shared/domain/repository/repository-interface.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1694819771845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1694819771845,
            "name": "Commit-0",
            "content": "import { Entity } from \"../entity\";\nimport { ValueObject } from \"../value-object\";\nimport { SearchParams } from \"./search-params\";\nimport { SearchResult } from \"./search-result\";\n\nexport interface IRepository<E extends Entity, EntityId> {\n  insert(entity: E): Promise<void>\n  bulkInsert(entities: E[]): Promise<void>\n  update(entity: E): Promise<void>\n  delete(entity_id: EntityId): Promise<void>\n  findById(entity_id: EntityId): Promise<E | null>\n  findAll(): Promise<E[]>\n  getEntity(): new (...args: any[]) => E\n}\n\nexport interface ISearchableRepository<\n  E extends Entity,\n  EntityId extends ValueObject,\n  Filter = string,\n  SearchInput = SearchParams<Filter>,\n  SearchOutput = SearchResult\n> extends IRepository<E, EntityId> {\n  sortableFields: string[]\n  search(props: SearchInput): Promise<SearchOutput>\n}"
        }
    ]
}