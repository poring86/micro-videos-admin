{
    "sourceFile": "src/category/domain/category.validator.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1694360016529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694360811105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,4 +26,10 @@\n   validate(entity: Category) {\n     return super.validate(new CategoryRules(entity))\n   }\n }\n+\n+export class CategoryValidatorFactory {\n+  static create(entity: Category) {\n+    return new CategoryValidator().validate(entity)\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1694360820161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,7 +29,7 @@\n }\n \n export class CategoryValidatorFactory {\n   static create(entity: Category) {\n-    return new CategoryValidator().validate(entity)\n+    return new CategoryValidator()\n   }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1694360967757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,8 @@\n   }\n }\n \n export class CategoryValidatorFactory {\n-  static create(entity: Category) {\n+  static create() {\n     return new CategoryValidator()\n   }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695178381691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,22 +2,11 @@\n import { Category } from \"./category.entity\";\n import ClassValidatorFields from \"../../shared/domain/validators/class-validator-fields\";\n \n class CategoryRules {\n-  @MaxLength(255)\n-  @IsString()\n-  @IsNotEmpty()\n+  @MaxLength(255, { groups: ['name'] })\n   name: string\n \n-\n-  @IsString()\n-  @IsOptional()\n-  description: string | null\n-\n-  @IsBoolean()\n-  @IsNotEmpty()\n-  is_active: boolean\n-\n   constructor({ name, description, is_active }: Category) {\n     Object.assign(this, { name, description, is_active })\n   }\n }\n"
                },
                {
                    "date": 1695178414665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n class CategoryRules {\n   @MaxLength(255, { groups: ['name'] })\n   name: string\n \n-  constructor({ name, description, is_active }: Category) {\n-    Object.assign(this, { name, description, is_active })\n+  constructor(entity: Category) {\n+    Object.assign(this, entity)\n   }\n }\n \n export class CategoryValidator extends ClassValidatorFields<CategoryRules>{\n"
                },
                {
                    "date": 1695178450755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n+import { MaxLength } from \"class-validator\";\n import { Category } from \"./category.entity\";\n import ClassValidatorFields from \"../../shared/domain/validators/class-validator-fields\";\n \n class CategoryRules {\n"
                },
                {
                    "date": 1695178652165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,11 @@\n   }\n }\n \n export class CategoryValidator extends ClassValidatorFields<CategoryRules>{\n-  validate(entity: Category) {\n-    return super.validate(new CategoryRules(entity))\n+  validate(notification: Notification, data: any, fields?: string[]): boolean {\n+    const newFields = fields?.length ? fields : ['name']\n+    return super.validate(notification, new CategoryRules(data), newFields)\n   }\n }\n \n export class CategoryValidatorFactory {\n"
                },
                {
                    "date": 1695212315788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { MaxLength } from \"class-validator\";\n import { Category } from \"./category.entity\";\n-import ClassValidatorFields from \"../../shared/domain/validators/class-validator-fields\";\n+import { ClassValidatorFields } from \"../../shared/domain/validators/class-validator-fields\";\n \n class CategoryRules {\n   @MaxLength(255, { groups: ['name'] })\n   name: string\n@@ -10,9 +10,9 @@\n     Object.assign(this, entity)\n   }\n }\n \n-export class CategoryValidator extends ClassValidatorFields<CategoryRules>{\n+export class CategoryValidator extends ClassValidatorFields {\n   validate(notification: Notification, data: any, fields?: string[]): boolean {\n     const newFields = fields?.length ? fields : ['name']\n     return super.validate(notification, new CategoryRules(data), newFields)\n   }\n"
                },
                {
                    "date": 1695212348517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n }\n \n export class CategoryValidator extends ClassValidatorFields {\n   validate(notification: Notification, data: any, fields?: string[]): boolean {\n-    const newFields = fields?.length ? fields : ['name']\n-    return super.validate(notification, new CategoryRules(data), newFields)\n+    const newFields = fields?.length ? fields : ['name'];\n+    return super.validate(notification, new CategoryRules(data), newFields);\n   }\n }\n \n export class CategoryValidatorFactory {\n"
                },
                {
                    "date": 1695212530037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { MaxLength } from \"class-validator\";\n import { Category } from \"./category.entity\";\n import { ClassValidatorFields } from \"../../shared/domain/validators/class-validator-fields\";\n+import { Notification } from \"../../shared/domain/validators/notification\";\n \n class CategoryRules {\n   @MaxLength(255, { groups: ['name'] })\n   name: string\n"
                }
            ],
            "date": 1694360016529,
            "name": "Commit-0",
            "content": "import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\nimport { Category } from \"./category.entity\";\nimport ClassValidatorFields from \"../../shared/domain/validators/class-validator-fields\";\n\nclass CategoryRules {\n  @MaxLength(255)\n  @IsString()\n  @IsNotEmpty()\n  name: string\n\n\n  @IsString()\n  @IsOptional()\n  description: string | null\n\n  @IsBoolean()\n  @IsNotEmpty()\n  is_active: boolean\n\n  constructor({ name, description, is_active }: Category) {\n    Object.assign(this, { name, description, is_active })\n  }\n}\n\nexport class CategoryValidator extends ClassValidatorFields<CategoryRules>{\n  validate(entity: Category) {\n    return super.validate(new CategoryRules(entity))\n  }\n}\n"
        }
    ]
}