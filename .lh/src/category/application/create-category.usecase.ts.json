{
    "sourceFile": "src/category/application/create-category.usecase.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1695004361767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695004369896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n }\n \n export type CreateCategoryInput = {\n   name: string\n-  description: string | null\n+  description?: string | null\n   is_active?: boolean\n }\n \n export type CreateCategoryOutput = {\n"
                },
                {
                    "date": 1695005379151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,23 @@\n import { IUseCase } from \"../../shared/application/use-case.interface\";\n+import { Category } from \"../domain/category.entity\";\n+import { ICategoryRepository } from \"../domain/category.repository\";\n \n export class CreateCategoryUseCase implements IUseCase<CreateCategoryInput, CreateCategoryOutput>{\n-  execute(input: CreateCategoryInput): Promise<CreateCategoryOutput> {\n+  constructor(private readonly categoryRepo: ICategoryRepository)\n \n+  async execute(input: CreateCategoryInput): Promise<CreateCategoryOutput> {\n+    const entity = Category.create(input)\n+\n+    await this.categoryRepo.insert(entity)\n+\n+    return {\n+      id: entity.category_id.id,\n+      name: entity.name,\n+      description: entity.description,\n+      is_active: entity.is_active,\n+      created_at: entity.created_at\n+    }\n   }\n }\n \n export type CreateCategoryInput = {\n"
                },
                {
                    "date": 1695005443086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Category } from \"../domain/category.entity\";\n import { ICategoryRepository } from \"../domain/category.repository\";\n \n export class CreateCategoryUseCase implements IUseCase<CreateCategoryInput, CreateCategoryOutput>{\n-  constructor(private readonly categoryRepo: ICategoryRepository)\n+  constructor(private readonly categoryRepo: ICategoryRepository) { }\n \n   async execute(input: CreateCategoryInput): Promise<CreateCategoryOutput> {\n     const entity = Category.create(input)\n \n"
                }
            ],
            "date": 1695004361767,
            "name": "Commit-0",
            "content": "import { IUseCase } from \"../../shared/application/use-case.interface\";\n\nexport class CreateCategoryUseCase implements IUseCase<CreateCategoryInput, CreateCategoryOutput>{\n  execute(input: CreateCategoryInput): Promise<CreateCategoryOutput> {\n\n  }\n}\n\nexport type CreateCategoryInput = {\n  name: string\n  description: string | null\n  is_active?: boolean\n}\n\nexport type CreateCategoryOutput = {\n  id: string\n  name: string\n  description?: string | null\n  is_active?: boolean\n  created_at: Date\n}\n"
        }
    ]
}