{
    "sourceFile": "src/category/application/use-cases/list-category.usecase.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1695131989053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695151942446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,26 @@\n+import { PaginationOutputMapper } from \"../../../shared/application/pagination-output\";\n import { IUseCase } from \"../../../shared/application/use-case.interface\";\n-import { CategorySearchParams, ICategoryRepository } from \"../../domain/category.repository\";\n+import { SortDirection } from \"../../../shared/domain/repository/search-params\";\n+import { CategoryFilter, CategorySearchParams, ICategoryRepository } from \"../../domain/category.repository\";\n \n export class ListCategoriesUseCase implements IUseCase<ListCategoriesInput, ListCategoriesOutput> {\n   constructor(private categoryRepo: ICategoryRepository) { }\n \n   async execute(input: ListCategoriesInput): Promise<ListCategoriesOutput> {\n     const params = new CategorySearchParams(input)\n     const searchResult = await this.categoryRepo.search(params)\n+    return PaginationOutputMapper.toOutput(searchResult.items, searchResult)\n   }\n }\n\\ No newline at end of file\n \n-export type ListCategoriesInput\n+export type ListCategoriesInput = {\n+  page?: number\n+  per_page?: number\n+  sort?: string | null\n+  sort_dir?: SortDirection | null\n+  filter?: CategoryFilter | null\n+}\n \n-export type ListCategoriesOutput\n+export type ListCategoriesOutput = {\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695153963665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,18 @@\n import { PaginationOutputMapper } from \"../../../shared/application/pagination-output\";\n import { IUseCase } from \"../../../shared/application/use-case.interface\";\n import { SortDirection } from \"../../../shared/domain/repository/search-params\";\n import { CategoryFilter, CategorySearchParams, ICategoryRepository } from \"../../domain/category.repository\";\n+import { CategoryOutputMapper } from \"./common/category-output\";\n \n export class ListCategoriesUseCase implements IUseCase<ListCategoriesInput, ListCategoriesOutput> {\n   constructor(private categoryRepo: ICategoryRepository) { }\n \n   async execute(input: ListCategoriesInput): Promise<ListCategoriesOutput> {\n     const params = new CategorySearchParams(input)\n     const searchResult = await this.categoryRepo.search(params)\n-    return PaginationOutputMapper.toOutput(searchResult.items, searchResult)\n+    const outputItems = searchResult.items.map((item) => CategoryOutputMapper.toOutput(item))\n+    return PaginationOutputMapper.toOutput(outputItems, searchResult)\n   }\n }\n \n export type ListCategoriesInput = {\n"
                },
                {
                    "date": 1695154280409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { PaginationOutputMapper } from \"../../../shared/application/pagination-output\";\n import { IUseCase } from \"../../../shared/application/use-case.interface\";\n import { SortDirection } from \"../../../shared/domain/repository/search-params\";\n-import { CategoryFilter, CategorySearchParams, ICategoryRepository } from \"../../domain/category.repository\";\n+import { CategoryFilter, CategorySearchParams, CategorySearchResult, ICategoryRepository } from \"../../domain/category.repository\";\n import { CategoryOutputMapper } from \"./common/category-output\";\n \n export class ListCategoriesUseCase implements IUseCase<ListCategoriesInput, ListCategoriesOutput> {\n   constructor(private categoryRepo: ICategoryRepository) { }\n@@ -12,8 +12,16 @@\n     const searchResult = await this.categoryRepo.search(params)\n     const outputItems = searchResult.items.map((item) => CategoryOutputMapper.toOutput(item))\n     return PaginationOutputMapper.toOutput(outputItems, searchResult)\n   }\n+\n+  private toOutput(searchResult: CategorySearchResult): ListCategoriesOutput {\n+    const { items: _items } = searchResult\n+    const items = _items.map((i) => {\n+      return CategoryOutputMapper.toOutput(i)\n+    })\n+    return PaginationOutputMapper.toOutput(items, searchResult)\n+  }\n }\n \n export type ListCategoriesInput = {\n   page?: number\n"
                },
                {
                    "date": 1695154350535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n-import { PaginationOutputMapper } from \"../../../shared/application/pagination-output\";\n+import { PaginationOutput, PaginationOutputMapper } from \"../../../shared/application/pagination-output\";\n import { IUseCase } from \"../../../shared/application/use-case.interface\";\n import { SortDirection } from \"../../../shared/domain/repository/search-params\";\n import { CategoryFilter, CategorySearchParams, CategorySearchResult, ICategoryRepository } from \"../../domain/category.repository\";\n-import { CategoryOutputMapper } from \"./common/category-output\";\n+import { CategoryOutput, CategoryOutputMapper } from \"./common/category-output\";\n \n export class ListCategoriesUseCase implements IUseCase<ListCategoriesInput, ListCategoriesOutput> {\n   constructor(private categoryRepo: ICategoryRepository) { }\n \n@@ -30,7 +30,5 @@\n   sort_dir?: SortDirection | null\n   filter?: CategoryFilter | null\n }\n \n-export type ListCategoriesOutput = {\n-\n-}\n\\ No newline at end of file\n+export type ListCategoriesOutput = PaginationOutput<CategoryOutput>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1695131989053,
            "name": "Commit-0",
            "content": "import { IUseCase } from \"../../../shared/application/use-case.interface\";\nimport { CategorySearchParams, ICategoryRepository } from \"../../domain/category.repository\";\n\nexport class ListCategoriesUseCase implements IUseCase<ListCategoriesInput, ListCategoriesOutput> {\n  constructor(private categoryRepo: ICategoryRepository) { }\n\n  async execute(input: ListCategoriesInput): Promise<ListCategoriesOutput> {\n    const params = new CategorySearchParams(input)\n    const searchResult = await this.categoryRepo.search(params)\n  }\n}\n\nexport type ListCategoriesInput\n\nexport type ListCategoriesOutput"
        }
    ]
}