{
    "sourceFile": "src/category/application/use-cases/create-category/create-category.usecase.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1695233964384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1695233964384,
            "name": "Commit-0",
            "content": "import { IUseCase } from \"../../../../shared/application/use-case.interface\";\nimport { Category } from \"../../../domain/category.entity\";\nimport { ICategoryRepository } from \"../../../domain/category.repository\";\nimport { CategoryOutput, CategoryOutputMapper } from \"../common/category-output\";\n\nexport class CreateCategoryUseCase implements IUseCase<CreateCategoryInput, CreateCategoryOutput>{\n  constructor(private readonly categoryRepo: ICategoryRepository) { }\n\n  async execute(input: CreateCategoryInput): Promise<CreateCategoryOutput> {\n    const entity = Category.create(input)\n\n    await this.categoryRepo.insert(entity)\n\n    return CategoryOutputMapper.toOutput(entity)\n  }\n}\n\nexport type CreateCategoryInput = {\n  name: string\n  description?: string | null\n  is_active?: boolean\n}\n\nexport type CreateCategoryOutput = CategoryOutput\n"
        }
    ]
}