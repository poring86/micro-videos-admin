{
    "sourceFile": "src/category/application/use-cases/__tests__/integration/delete-category.usecase.int.spec.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1695247445536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1695247445536,
            "name": "Commit-0",
            "content": "import { setupSequelize } from \"../../../../../shared/infra/testing/herpers\"\nimport { Category } from \"../../../../domain/category.entity\"\nimport { CategorySequelizeRepository } from \"../../../../infra/db/sequelize/category-sequelize.repository\"\nimport { CategoryModel } from \"../../../../infra/db/sequelize/category.model\"\nimport { DeleteCategoryUseCase } from \"../../delete-category/delete-category.usecase\"\n\ndescribe(\"DeleteCategoryUseCase Integration Tests\", () => {\n  let useCase: DeleteCategoryUseCase\n  let repository: CategorySequelizeRepository\n\n  setupSequelize({ models: [CategoryModel] })\n\n  beforeEach(() => {\n    repository = new CategorySequelizeRepository(CategoryModel)\n    useCase = new DeleteCategoryUseCase(repository)\n  })\n\n  it(\"should throws error when entity not found\", async () => {\n    const category = Category.fake().aCategory().build()\n    await repository.insert(category)\n    await useCase.execute({\n      id: category.category_id.id\n    })\n    await expect(repository.findById(category.category_id)).resolves.toBeNull()\n  })\n})"
        }
    ]
}