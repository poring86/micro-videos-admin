{
    "sourceFile": "src/category/infra/db/sequelize/category-mapper.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1694955180013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694966077558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,15 @@\n     })\n   }\n \n   static toEntity(model: CategoryModel): Category {\n-    return new Category({\n+    const entity = new Category({\n       category_id: new Uuid(model.category_id),\n       name: model.name,\n       description: model.description,\n       is_active: model.is_active,\n       created_at: model.created_at,\n     });\n+    Category.validate()\n+    return entity\n   }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1694966088365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,8 @@\n       description: model.description,\n       is_active: model.is_active,\n       created_at: model.created_at,\n     });\n-    Category.validate()\n+    Category.validate(entity)\n     return entity\n   }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695223480873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,15 +13,19 @@\n     })\n   }\n \n   static toEntity(model: CategoryModel): Category {\n-    const entity = new Category({\n+    const category = new Category({\n       category_id: new Uuid(model.category_id),\n       name: model.name,\n       description: model.description,\n       is_active: model.is_active,\n       created_at: model.created_at,\n     });\n-    Category.validate(entity)\n-    return entity\n+\n+    category.validate();\n+    if (category.notification.hasErrors()) {\n+      throw new EntityValidationError(category.notification.toJSON());\n+    }\n+    return category;\n   }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695225494786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { EntityValidationError } from \"../../../../shared/domain/validators/valitation.error\";\n import { Uuid } from \"../../../../shared/domain/value-objects/uuid.vo\";\n import { Category } from \"../../../domain/category.entity\";\n import { CategoryModel } from \"./category.model\";\n \n"
                }
            ],
            "date": 1694955180013,
            "name": "Commit-0",
            "content": "import { Uuid } from \"../../../../shared/domain/value-objects/uuid.vo\";\nimport { Category } from \"../../../domain/category.entity\";\nimport { CategoryModel } from \"./category.model\";\n\nexport class CategoryModelMapper {\n  static toModel(entity: Category): CategoryModel {\n    return CategoryModel.build({\n      category_id: entity.category_id.id,\n      name: entity.name,\n      description: entity.description,\n      is_active: entity.is_active,\n      created_at: entity.created_at\n    })\n  }\n\n  static toEntity(model: CategoryModel): Category {\n    return new Category({\n      category_id: new Uuid(model.category_id),\n      name: model.name,\n      description: model.description,\n      is_active: model.is_active,\n      created_at: model.created_at,\n    });\n  }\n}"
        }
    ]
}