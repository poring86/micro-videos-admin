{
    "sourceFile": "jest.config.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1694121857619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694121882013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n   // testRunner: \"jest-circus/runner\",\n \n   // A map from regular expressions to paths to transformers\n   transform: {\n-    '^.\\\\.(t|j)sx?$': '@swc/jest'\n+    '^.\\\\.(t|j)sx?$': '@swc/jest', 'ts-jest'\n   },\n \n   // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n   // transformIgnorePatterns: [\n"
                },
                {
                    "date": 1694121902369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n   // testRunner: \"jest-circus/runner\",\n \n   // A map from regular expressions to paths to transformers\n   transform: {\n-    '^.\\\\.(t|j)sx?$': '@swc/jest', 'ts-jest'\n+    '^.+\\\\.(t|j)sx?$': '@swc/jest', 'ts-jest'\n   },\n \n   // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n   // transformIgnorePatterns: [\n"
                },
                {
                    "date": 1694122110321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n   // Automatically restore mock state and implementation before every test\n   // restoreMocks: false,\n \n   // The root directory that Jest should scan for tests and modules within\n-  // rootDir: undefined,\n+  rootDir: ',/src',\n \n   // A list of paths to directories that Jest should use to search for files in\n   // roots: [\n   //   \"<rootDir>\"\n"
                },
                {
                    "date": 1694135937475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n   // Automatically restore mock state and implementation before every test\n   // restoreMocks: false,\n \n   // The root directory that Jest should scan for tests and modules within\n-  rootDir: ',/src',\n+  rootDir: './src',\n \n   // A list of paths to directories that Jest should use to search for files in\n   // roots: [\n   //   \"<rootDir>\"\n@@ -175,9 +175,9 @@\n   // testRunner: \"jest-circus/runner\",\n \n   // A map from regular expressions to paths to transformers\n   transform: {\n-    '^.+\\\\.(t|j)sx?$': '@swc/jest', 'ts-jest'\n+    '^.+\\\\.(t|j)sx?$': '@swc/jest'\n   },\n \n   // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n   // transformIgnorePatterns: [\n"
                },
                {
                    "date": 1694441481837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,11 @@\n   // The paths to modules that run some code to configure or set up the testing environment before each test\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n-  // setupFilesAfterEnv: [],\n+  setupFilesAfterEnv: [\n+    \"./src/shared/infra/testing/setup.ts\"\n+  ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n \n"
                },
                {
                    "date": 1694441497355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n   setupFilesAfterEnv: [\n-    \"./src/shared/infra/testing/setup.ts\"\n+    \"./src/shared/infra/testing/expects-helpers.ts\"\n   ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n"
                },
                {
                    "date": 1694441581501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n   setupFilesAfterEnv: [\n-    \"./src/shared/infra/testing/expects-helpers.ts\"\n+    \"./shared/infra/testing/expects-helpers.ts\"\n   ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n"
                },
                {
                    "date": 1694441601311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n   setupFilesAfterEnv: [\n-    \"./shared/infra/testing/expects-helpers.ts\"\n+    \"./shared/infra/testing/expect-helpers.ts\"\n   ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n"
                },
                {
                    "date": 1694446116335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n   setupFilesAfterEnv: [\n-    \"./shared/infra/testing/expect-helpers.ts\"\n+    \"./src/shared/infra/testing/expect-helpers.ts\"\n   ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n"
                },
                {
                    "date": 1694446395371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n   setupFilesAfterEnv: [\n-    \"./src/shared/infra/testing/expect-helpers.ts\"\n+    \"./shared/infra/testing/expect-helpers.ts\"\n   ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n"
                },
                {
                    "date": 1697114258196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   // The directory where Jest should store its cached dependency information\n   // cacheDirectory: \"/tmp/jest_rs\",\n \n   // Automatically clear mock calls, instances, contexts and results before every test\n-  clearMocks: true,\n+  //clearMocks: true,\n \n   // Indicates whether the coverage information should be collected while executing the test\n   // collectCoverage: false,\n \n@@ -32,9 +32,9 @@\n   //   \"/node_modules/\"\n   // ],\n \n   // Indicates which provider should be used to instrument code for coverage\n-  coverageProvider: \"v8\",\n+  //coverageProvider: 'v8',\n \n   // A list of reporter names that Jest uses when writing coverage reports\n   // coverageReporters: [\n   //   \"json\",\n@@ -122,9 +122,9 @@\n   // Automatically restore mock state and implementation before every test\n   // restoreMocks: false,\n \n   // The root directory that Jest should scan for tests and modules within\n-  rootDir: './src',\n+  //rootDir: './src',\n \n   // A list of paths to directories that Jest should use to search for files in\n   // roots: [\n   //   \"<rootDir>\"\n@@ -136,11 +136,9 @@\n   // The paths to modules that run some code to configure or set up the testing environment before each test\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n-  setupFilesAfterEnv: [\n-    \"./shared/infra/testing/expect-helpers.ts\"\n-  ],\n+  //setupFilesAfterEnv: ['./core/shared/infra/testing/expect-helpers.ts'],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n \n@@ -176,11 +174,11 @@\n   // This option allows use of a custom test runner\n   // testRunner: \"jest-circus/runner\",\n \n   // A map from regular expressions to paths to transformers\n-  transform: {\n-    '^.+\\\\.(t|j)sx?$': '@swc/jest'\n-  },\n+  // transform: {\n+  //   '^.+\\\\.(t|j)sx?$': '@swc/jest',\n+  // },\n \n   // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n   // transformIgnorePatterns: [\n   //   \"/node_modules/\",\n@@ -197,7 +195,39 @@\n   // watchPathIgnorePatterns: [],\n \n   // Whether to use watchman for file crawling\n   // watchman: true,\n+\n+  moduleFileExtensions: ['js', 'json', 'ts'],\n+  rootDir: 'src',\n+  testRegex: '.*\\\\..*spec\\\\.ts$',\n+  transform: {\n+    '^.+\\\\.(t|j)s$': '@swc/jest',\n+  },\n+  collectCoverageFrom: ['**/*.(t|j)s'],\n+  coverageDirectory: '../coverage',\n+  coveragePathIgnorePatterns: [\n+    '/node_modules/',\n+    '.interface.ts',\n+    '-interface.ts',\n+    'shared/testing',\n+    'shared-module/testing',\n+    'validator-rules.ts',\n+    '-fixture.ts',\n+    '.input.ts',\n+    '.d.ts',\n+  ],\n+  coverageThreshold: {\n+    global: {\n+      statements: 80,\n+      branches: 80,\n+      functions: 80,\n+      lines: 80,\n+    },\n+  },\n+  testEnvironment: 'node',\n+  setupFilesAfterEnv: ['./core/shared/infra/testing/expect-helpers.ts'],\n+  coverageProvider: 'v8',\n+  clearMocks: true,\n };\n \n export default config;\n"
                },
                {
                    "date": 1697114399226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   // The directory where Jest should store its cached dependency information\n   // cacheDirectory: \"/tmp/jest_rs\",\n \n   // Automatically clear mock calls, instances, contexts and results before every test\n-  //clearMocks: true,\n+  // clearMocks: true,\n \n   // Indicates whether the coverage information should be collected while executing the test\n   // collectCoverage: false,\n \n@@ -32,9 +32,9 @@\n   //   \"/node_modules/\"\n   // ],\n \n   // Indicates which provider should be used to instrument code for coverage\n-  //coverageProvider: 'v8',\n+  // coverageProvider: \"v8\",\n \n   // A list of reporter names that Jest uses when writing coverage reports\n   // coverageReporters: [\n   //   \"json\",\n@@ -122,9 +122,9 @@\n   // Automatically restore mock state and implementation before every test\n   // restoreMocks: false,\n \n   // The root directory that Jest should scan for tests and modules within\n-  //rootDir: './src',\n+  // rootDir: './src',\n \n   // A list of paths to directories that Jest should use to search for files in\n   // roots: [\n   //   \"<rootDir>\"\n@@ -136,9 +136,11 @@\n   // The paths to modules that run some code to configure or set up the testing environment before each test\n   // setupFiles: [],\n \n   // A list of paths to modules that run some code to configure or set up the testing framework before each test\n-  //setupFilesAfterEnv: ['./core/shared/infra/testing/expect-helpers.ts'],\n+  // setupFilesAfterEnv: [\n+  //   \"./core/shared/infra/testing/expect-helpers.ts\"\n+  // ],\n \n   // The number of seconds after which a test is considered as slow and reported as such in the results.\n   // slowTestThreshold: 5,\n \n@@ -175,9 +177,9 @@\n   // testRunner: \"jest-circus/runner\",\n \n   // A map from regular expressions to paths to transformers\n   // transform: {\n-  //   '^.+\\\\.(t|j)sx?$': '@swc/jest',\n+  //   '^.+\\\\.(t|j)sx?$': '@swc/jest'\n   // },\n \n   // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n   // transformIgnorePatterns: [\n@@ -196,38 +198,27 @@\n \n   // Whether to use watchman for file crawling\n   // watchman: true,\n \n-  moduleFileExtensions: ['js', 'json', 'ts'],\n-  rootDir: 'src',\n-  testRegex: '.*\\\\..*spec\\\\.ts$',\n+  moduleFileExtensions: [\n+    \"js\",\n+    \"json\",\n+    \"ts\"\n+  ],\n+  rootDir: \"src\",\n+  testRegex: \".*\\\\..*spec\\\\.ts$\",\n   transform: {\n-    '^.+\\\\.(t|j)s$': '@swc/jest',\n+    \"^.+\\\\.(t|j)s$\": '@swc/jest'\n   },\n-  collectCoverageFrom: ['**/*.(t|j)s'],\n-  coverageDirectory: '../coverage',\n-  coveragePathIgnorePatterns: [\n-    '/node_modules/',\n-    '.interface.ts',\n-    '-interface.ts',\n-    'shared/testing',\n-    'shared-module/testing',\n-    'validator-rules.ts',\n-    '-fixture.ts',\n-    '.input.ts',\n-    '.d.ts',\n+  collectCoverageFrom: [\n+    \"**/*.(t|j)s\"\n   ],\n-  coverageThreshold: {\n-    global: {\n-      statements: 80,\n-      branches: 80,\n-      functions: 80,\n-      lines: 80,\n-    },\n-  },\n-  testEnvironment: 'node',\n-  setupFilesAfterEnv: ['./core/shared/infra/testing/expect-helpers.ts'],\n-  coverageProvider: 'v8',\n+  coverageDirectory: \"../coverage\",\n+  testEnvironment: \"node\",\n+  setupFilesAfterEnv: [\n+    \"./core/shared/infra/testing/expect-helpers.ts\"\n+  ],\n+  coverageProvider: \"v8\",\n   clearMocks: true,\n };\n \n export default config;\n"
                }
            ],
            "date": 1694121857619,
            "name": "Commit-0",
            "content": "/**\n * For a detailed explanation regarding each configuration property, visit:\n * https://jestjs.io/docs/configuration\n */\n\nimport type { Config } from 'jest';\n\nconst config: Config = {\n  // All imported modules in your tests should be mocked automatically\n  // automock: false,\n\n  // Stop running tests after `n` failures\n  // bail: 0,\n\n  // The directory where Jest should store its cached dependency information\n  // cacheDirectory: \"/tmp/jest_rs\",\n\n  // Automatically clear mock calls, instances, contexts and results before every test\n  clearMocks: true,\n\n  // Indicates whether the coverage information should be collected while executing the test\n  // collectCoverage: false,\n\n  // An array of glob patterns indicating a set of files for which coverage information should be collected\n  // collectCoverageFrom: undefined,\n\n  // The directory where Jest should output its coverage files\n  // coverageDirectory: undefined,\n\n  // An array of regexp pattern strings used to skip coverage collection\n  // coveragePathIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // Indicates which provider should be used to instrument code for coverage\n  coverageProvider: \"v8\",\n\n  // A list of reporter names that Jest uses when writing coverage reports\n  // coverageReporters: [\n  //   \"json\",\n  //   \"text\",\n  //   \"lcov\",\n  //   \"clover\"\n  // ],\n\n  // An object that configures minimum threshold enforcement for coverage results\n  // coverageThreshold: undefined,\n\n  // A path to a custom dependency extractor\n  // dependencyExtractor: undefined,\n\n  // Make calling deprecated APIs throw helpful error messages\n  // errorOnDeprecated: false,\n\n  // The default configuration for fake timers\n  // fakeTimers: {\n  //   \"enableGlobally\": false\n  // },\n\n  // Force coverage collection from ignored files using an array of glob patterns\n  // forceCoverageMatch: [],\n\n  // A path to a module which exports an async function that is triggered once before all test suites\n  // globalSetup: undefined,\n\n  // A path to a module which exports an async function that is triggered once after all test suites\n  // globalTeardown: undefined,\n\n  // A set of global variables that need to be available in all test environments\n  // globals: {},\n\n  // The maximum amount of workers used to run your tests. Can be specified as % or a number. E.g. maxWorkers: 10% will use 10% of your CPU amount + 1 as the maximum worker number. maxWorkers: 2 will use a maximum of 2 workers.\n  // maxWorkers: \"50%\",\n\n  // An array of directory names to be searched recursively up from the requiring module's location\n  // moduleDirectories: [\n  //   \"node_modules\"\n  // ],\n\n  // An array of file extensions your modules use\n  // moduleFileExtensions: [\n  //   \"js\",\n  //   \"mjs\",\n  //   \"cjs\",\n  //   \"jsx\",\n  //   \"ts\",\n  //   \"tsx\",\n  //   \"json\",\n  //   \"node\"\n  // ],\n\n  // A map from regular expressions to module names or to arrays of module names that allow to stub out resources with a single module\n  // moduleNameMapper: {},\n\n  // An array of regexp pattern strings, matched against all module paths before considered 'visible' to the module loader\n  // modulePathIgnorePatterns: [],\n\n  // Activates notifications for test results\n  // notify: false,\n\n  // An enum that specifies notification mode. Requires { notify: true }\n  // notifyMode: \"failure-change\",\n\n  // A preset that is used as a base for Jest's configuration\n  // preset: undefined,\n\n  // Run tests from one or more projects\n  // projects: undefined,\n\n  // Use this configuration option to add custom reporters to Jest\n  // reporters: undefined,\n\n  // Automatically reset mock state before every test\n  // resetMocks: false,\n\n  // Reset the module registry before running each individual test\n  // resetModules: false,\n\n  // A path to a custom resolver\n  // resolver: undefined,\n\n  // Automatically restore mock state and implementation before every test\n  // restoreMocks: false,\n\n  // The root directory that Jest should scan for tests and modules within\n  // rootDir: undefined,\n\n  // A list of paths to directories that Jest should use to search for files in\n  // roots: [\n  //   \"<rootDir>\"\n  // ],\n\n  // Allows you to use a custom runner instead of Jest's default test runner\n  // runner: \"jest-runner\",\n\n  // The paths to modules that run some code to configure or set up the testing environment before each test\n  // setupFiles: [],\n\n  // A list of paths to modules that run some code to configure or set up the testing framework before each test\n  // setupFilesAfterEnv: [],\n\n  // The number of seconds after which a test is considered as slow and reported as such in the results.\n  // slowTestThreshold: 5,\n\n  // A list of paths to snapshot serializer modules Jest should use for snapshot testing\n  // snapshotSerializers: [],\n\n  // The test environment that will be used for testing\n  // testEnvironment: \"jest-environment-node\",\n\n  // Options that will be passed to the testEnvironment\n  // testEnvironmentOptions: {},\n\n  // Adds a location field to test results\n  // testLocationInResults: false,\n\n  // The glob patterns Jest uses to detect test files\n  // testMatch: [\n  //   \"**/__tests__/**/*.[jt]s?(x)\",\n  //   \"**/?(*.)+(spec|test).[tj]s?(x)\"\n  // ],\n\n  // An array of regexp pattern strings that are matched against all test paths, matched tests are skipped\n  // testPathIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // The regexp pattern or array of patterns that Jest uses to detect test files\n  // testRegex: [],\n\n  // This option allows the use of a custom results processor\n  // testResultsProcessor: undefined,\n\n  // This option allows use of a custom test runner\n  // testRunner: \"jest-circus/runner\",\n\n  // A map from regular expressions to paths to transformers\n  transform: {\n    '^.\\\\.(t|j)sx?$': '@swc/jest'\n  },\n\n  // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n  // transformIgnorePatterns: [\n  //   \"/node_modules/\",\n  //   \"\\\\.pnp\\\\.[^\\\\/]+$\"\n  // ],\n\n  // An array of regexp pattern strings that are matched against all modules before the module loader will automatically return a mock for them\n  // unmockedModulePathPatterns: undefined,\n\n  // Indicates whether each individual test should be reported during the run\n  // verbose: undefined,\n\n  // An array of regexp patterns that are matched against all source file paths before re-running tests in watch mode\n  // watchPathIgnorePatterns: [],\n\n  // Whether to use watchman for file crawling\n  // watchman: true,\n};\n\nexport default config;\n"
        }
    ]
}